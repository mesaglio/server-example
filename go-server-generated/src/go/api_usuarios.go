/*
 * ABM de Usuarios
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */
package swagger

import (
	"encoding/json"
	"fmt"
	"net/http"
)

var usuarios []*Usuario

func ActualizarUsuarioByUsername(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	username := getPathParam(w, r)
	var usuario Usuario
	err := json.NewDecoder(r.Body).Decode(&usuario)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	_usuario, _ := buscarUsuarioPorUsername(*username)
	if _usuario == nil {
		w.WriteHeader(http.StatusNotFound)
		return
	}
	*_usuario = usuario
	w.WriteHeader(http.StatusOK)
	fmt.Fprintf(w, toJson(_usuario))
}

func CrearUsuario(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	var usuario Usuario
	err := json.NewDecoder(r.Body).Decode(&usuario)
	if err != nil {
		http.Error(w, err.Error(), http.StatusBadRequest)
		return
	}
	usuarios = append(usuarios, &usuario)
	w.WriteHeader(http.StatusCreated)
}

func EliminarUsuarioByUsername(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	username := getPathParam(w, r)
	result := removeByUsername(*username)
	if result {
		w.WriteHeader(http.StatusOK)
		return
	}
	w.WriteHeader(http.StatusNotFound)
}

func ObtenerUsuarioByUsername(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	username := getPathParam(w, r)
	usuario, _ := buscarUsuarioPorUsername(*username)
	if usuario == nil {
		w.WriteHeader(http.StatusNotFound)
		return
	}
	w.WriteHeader(http.StatusOK)
	fmt.Fprintf(w, toJson(usuario))
}

func ObtenerUsuarios(w http.ResponseWriter, r *http.Request) {
	w.Header().Set("Content-Type", "application/json; charset=UTF-8")
	w.WriteHeader(http.StatusOK)
	if len(usuarios) == 0 {
		fmt.Fprintf(w, "[]")
		return
	}
	fmt.Fprintf(w, printUsuarios())
}
