# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Usuario(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, documento: str=None, username: str=None, nombres: str=None, apellidos: str=None, genero: str=None, fecha_nacimiento: str=None):  # noqa: E501
        """Usuario - a model defined in Swagger

        :param documento: The documento of this Usuario.  # noqa: E501
        :type documento: str
        :param username: The username of this Usuario.  # noqa: E501
        :type username: str
        :param nombres: The nombres of this Usuario.  # noqa: E501
        :type nombres: str
        :param apellidos: The apellidos of this Usuario.  # noqa: E501
        :type apellidos: str
        :param genero: The genero of this Usuario.  # noqa: E501
        :type genero: str
        :param fecha_nacimiento: The fecha_nacimiento of this Usuario.  # noqa: E501
        :type fecha_nacimiento: str
        """
        self.swagger_types = {
            'documento': str,
            'username': str,
            'nombres': str,
            'apellidos': str,
            'genero': str,
            'fecha_nacimiento': str
        }

        self.attribute_map = {
            'documento': 'documento',
            'username': 'username',
            'nombres': 'nombres',
            'apellidos': 'apellidos',
            'genero': 'genero',
            'fecha_nacimiento': 'fechaNacimiento'
        }
        self._documento = documento
        self._username = username
        self._nombres = nombres
        self._apellidos = apellidos
        self._genero = genero
        self._fecha_nacimiento = fecha_nacimiento

    @classmethod
    def from_dict(cls, dikt) -> 'Usuario':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Usuario of this Usuario.  # noqa: E501
        :rtype: Usuario
        """
        return util.deserialize_model(dikt, cls)

    @property
    def documento(self) -> str:
        """Gets the documento of this Usuario.


        :return: The documento of this Usuario.
        :rtype: str
        """
        return self._documento

    @documento.setter
    def documento(self, documento: str):
        """Sets the documento of this Usuario.


        :param documento: The documento of this Usuario.
        :type documento: str
        """

        self._documento = documento

    @property
    def username(self) -> str:
        """Gets the username of this Usuario.


        :return: The username of this Usuario.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username: str):
        """Sets the username of this Usuario.


        :param username: The username of this Usuario.
        :type username: str
        """

        self._username = username

    @property
    def nombres(self) -> str:
        """Gets the nombres of this Usuario.


        :return: The nombres of this Usuario.
        :rtype: str
        """
        return self._nombres

    @nombres.setter
    def nombres(self, nombres: str):
        """Sets the nombres of this Usuario.


        :param nombres: The nombres of this Usuario.
        :type nombres: str
        """

        self._nombres = nombres

    @property
    def apellidos(self) -> str:
        """Gets the apellidos of this Usuario.


        :return: The apellidos of this Usuario.
        :rtype: str
        """
        return self._apellidos

    @apellidos.setter
    def apellidos(self, apellidos: str):
        """Sets the apellidos of this Usuario.


        :param apellidos: The apellidos of this Usuario.
        :type apellidos: str
        """

        self._apellidos = apellidos

    @property
    def genero(self) -> str:
        """Gets the genero of this Usuario.


        :return: The genero of this Usuario.
        :rtype: str
        """
        return self._genero

    @genero.setter
    def genero(self, genero: str):
        """Sets the genero of this Usuario.


        :param genero: The genero of this Usuario.
        :type genero: str
        """

        self._genero = genero

    @property
    def fecha_nacimiento(self) -> str:
        """Gets the fecha_nacimiento of this Usuario.


        :return: The fecha_nacimiento of this Usuario.
        :rtype: str
        """
        return self._fecha_nacimiento

    @fecha_nacimiento.setter
    def fecha_nacimiento(self, fecha_nacimiento: str):
        """Sets the fecha_nacimiento of this Usuario.


        :param fecha_nacimiento: The fecha_nacimiento of this Usuario.
        :type fecha_nacimiento: str
        """

        self._fecha_nacimiento = fecha_nacimiento
